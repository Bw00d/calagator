(in c:/ruby/rails_apps/calagator)

Spec::Rails::Example::RailsExampleGroup

Spec::Rails::Example::ModelExampleGroup

Spec::Rails::Example::FunctionalExampleGroup

Spec::Rails::Example::ControllerExampleGroup

Spec::Rails::Example::HelperExampleGroup

Spec::Rails::Example::ViewExampleGroup

EventsController when displaying events
- should show an event
- should redirect from a duplicate event to its master
- should show an error when asked to display a non-existent event

EventsController when creating or updating events

EventsController when creating or updating events when creating events
- should display form for creating new event
- should create a new event without a venue
- should create a new event for an existing venue
- should create a new event and new venue, and redirect to venue edit form
- should catch errors and redisplay the new event form
- should stop evil robots

EventsController when creating or updating events when updating events
- should display form for editing event
- should update an event without a venue
- should update an event and associate it with an existing venue
- should update an event and create a new venue, and redirect to the venue edit form
- should catch errors and redisplay the new event form

EventsController managing duplicates
- should find new duplicates and not old duplicates
- should redirect duplicate events to their master

EventsController when searching
- should search
- should fail if given no search query

EventsController when deleting
- should destroy events

SiteController
- should use SiteController

SourcesController

SourcesController using import logic
- should provide a way to create new sources
- should save the source object after creating events
- should assign newly created events to the source
- should assign newly created venues to the source
- should limit the number of created events to list in the flash
- should give a nice error message when given a bad URL

SourcesController handling GET /sources
- should be successful
- should render index template
- should find all sources
- should assign the found sources for the view

SourcesController handling GET /sources.xml
- should be successful
- should find all sources
- should render the found sources as xml

SourcesController handling GET /sources/1
- should be successful
- should render show template
- should find the source requested
- should assign the found source for the view

SourcesController handling GET /sources/1.xml
- should be successful
- should find the source requested
- should render the found source as xml

SourcesController handling GET /sources/new
- should be successful
- should render new template
- should create an new source
- should not save the new source
- should assign the new source for the view

SourcesController handling GET /sources/1/edit
- should be successful
- should render edit template
- should find the source requested
- should assign the found Source for the view

SourcesController handling POST /sources

SourcesController handling POST /sources with successful save
- should create a new source
- should redirect to the new source

SourcesController handling POST /sources with failed save
- should re-render 'new'

SourcesController handling PUT /sources/1

SourcesController handling PUT /sources/1 with successful update
- should find the source requested
- should update the found source
- should assign the found source for the view
- should redirect to the source

SourcesController handling PUT /sources/1 with failed update
- should re-render 'edit'

SourcesController handling DELETE /sources/1
- should find the source requested
- should call destroy on the found source
- should redirect to the sources list

SourcesController

SourcesController route generation
- should map { :controller => 'sources', :action => 'index' } to /sources
- should map { :controller => 'sources', :action => 'new' } to /sources/new
- should map { :controller => 'sources', :action => 'show', :id => 1 } to /sources/1
- should map { :controller => 'sources', :action => 'edit', :id => 1 } to /sources/1/edit
- should map { :controller => 'sources', :action => 'update', :id => 1} to /sources/1
- should map { :controller => 'sources', :action => 'destroy', :id => 1} to /sources/1

SourcesController route recognition
- should generate params { :controller => 'sources', action => 'index' } from GET /sources
- should generate params { :controller => 'sources', action => 'new' } from GET /sources/new
- should generate params { :controller => 'sources', action => 'create' } from POST /sources
- should generate params { :controller => 'sources', action => 'show', id => '1' } from GET /sources/1
- should generate params { :controller => 'sources', action => 'edit', id => '1' } from GET /sources/1;edit
- should generate params { :controller => 'sources', action => 'update', id => '1' } from PUT /sources/1
- should generate params { :controller => 'sources', action => 'destroy', id => '1' } from DELETE /sources/1

VenuesController
- should use VenuesController
- should redirect duplicate venues to their master

EventsHelper
- should display today as 'Today'
- should display tomorrow as 'Tomorrow'

SiteHelper

SourcesHelper
- should be included in the object returned by #helper

Time formatting

Time formatting without context date
- should format start time only in text format as 'Tuesday, April 1, 2008 at 9am'
- should format same day & am-pm in text format as 'Tuesday, April 1, 2008 from 9-11am'
- should format same day, different am-pm in text format as 'Tuesday, April 1, 2008 from 9am-1:30pm'
- should format different days in text format as 'Tuesday, April 1, 2008 at 9am through Wednesday, April 1, 2009 at 1:30pm'
- should format start time only in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">Tuesday, April 1, 2008 at 9am</abbr>'
- should format same day & am-pm in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">Tuesday, April 1, 2008 from 9</abbr>&ndash;<abbr class="dtend" title="2008-04-01T11:00:00">11am</abbr>'
- should format same day, different am-pm in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">Tuesday, April 1, 2008 from 9am</abbr>&ndash;<abbr class="dtend" title="2008-04-01T13:30:00">1:30pm</abbr>'
- should format different days in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">Tuesday, April 1, 2008 at 9am</abbr> through <abbr class="dtend" title="2009-04-01T13:30:00">Wednesday, April 1, 2009 at 1:30pm</abbr>'
- should format start time only in html format as 'Tuesday, April 1, 2008 at 9am'
- should format same day & am-pm in html format as 'Tuesday, April 1, 2008 from 9&ndash;11am'
- should format same day, different am-pm in html format as 'Tuesday, April 1, 2008 from 9am&ndash;1:30pm'
- should format different days in html format as 'Tuesday, April 1, 2008 at 9am through Wednesday, April 1, 2009 at 1:30pm'

Time formatting with context date
- should format start time only in text format as '9am'
- should format same day & am-pm in text format as '9-11am'
- should format same day, different am-pm in text format as '9am-1:30pm'
- should format different days in text format as '9am through Wednesday, April 1, 2009 at 1:30pm'
- should format start time only in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">9am</abbr>'
- should format same day & am-pm in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">9</abbr>&ndash;<abbr class="dtend" title="2008-04-01T11:00:00">11am</abbr>'
- should format same day, different am-pm in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">9am</abbr>&ndash;<abbr class="dtend" title="2008-04-01T13:30:00">1:30pm</abbr>'
- should format different days in hcal format as '<abbr class="dtstart" title="2008-04-01T09:00:00">9am</abbr> through <abbr class="dtend" title="2009-04-01T13:30:00">Wednesday, April 1, 2009 at 1:30pm</abbr>'
- should format start time only in html format as '9am'
- should format same day & am-pm in html format as '9&ndash;11am'
- should format same day, different am-pm in html format as '9am&ndash;1:30pm'
- should format different days in html format as '9am through Wednesday, April 1, 2009 at 1:30pm'

Time formatting with objects
- should format from objects that respond to just start_time
- should format from objects that respond to both start_time and end_time

VenuesHelper

Event

Event in general
- should be valid
- should add a http:// prefix to urls without one

Event dealing with tags
- should be taggable
- should tag itself if it is an extant record
- should just cache tagging if it is a new record
- should tag itself when saved for the first time if there are cached tags

Event when parsing
- should parse an AbstractEvent into an Event
- should parse an Event into an hCalendar
- should parse an Event into an iCalendar
- should parse an Event into an iCalendar without a URL and generate it

Event when processing date
- should find all events within a given date range
- should find all events with duplicate titles
- should find all events with duplicate titles and urls
- should fail to validate if end_time is earlier than start time 

Event when finding by dates

Event when finding by dates for overview
- should include ongoing events
- should not include past events

Event when finding by dates for future events
- should include ongoing events
- should not include past events

Event when finding by dates for date range
- should include ongoing events
- should not include past events

Event when searching
- should find events
- should find events and group them

Event when associating with venues
- should not change a venue to a nil venue
- should associate a venue if one wasn't set before
- should change an existing venue to a different one
- should not change a venue if associated with one of same name
- should clear an existing venue if given a nil venue
- should associate venue by title
- should associate venue by id
- should raise an exception if associated with an unknown type

SourceParser::Ical in general
- should read http URLs as-is
- should read webcal URLs as http

SourceParser::Ical when parsing locations
- should fallback on VPIM errors

SourceParser::Ical when parsing multiple items in an Upcoming feed
- should find multiple events
- should find venues for events
- should match each event with its venue

SourceParser::Ical when parsing multiple items in an Eventful feed
- should find multiple events
- should find venues for events
- should match each event with its venue

SourceParser when reading content
- should read from a normal URL
- should read from a wacky URL
- should unescape ATOM feeds

SourceParser when subclassing
- should demand that to_hcals is implemented
- should demand that to_abstract_events is implemented

SourceParser when parsing events
- should skip past parsing errors

Source in general
- should create events for source from URL
- should create source and events from URL
- should fail to create events for invalid sources

Source when reading name
- should return nil if no title is available
- should use title if available
- should use URL if available
- should prefer to use title over URL if both are available

Source when parsing URLs
- should not modify supported url schemes
- should substitute http for unsupported url schemes
- should add the http prefix to urls without one
- should strip leading and trailing whitespace from URL
- should be invalid if given invalid URL

Source with hCalendar events
- should parse hcal
- should parse a page with more than one hcal item in it
- should strip html from the venue title

Source with iCalendar events
- should parse Apple iCalendar format
- should parse basic iCalendar format
- should parse Upcoming iCalendar format and associate the event with a venue
- should parse Google iCalendar feed with multiple events
- should parse non-Vcard locations

Source when importing events with non-local times
- should store time ending in Z as UTC
- should store time with TZID=GMT in UTC

Source when skipping old events
- should be able to import all valid events
- should be able to skip invalid and old events

Source when importing events
- should not create a new event when importing an identical event
- should create two events when importing two non-identical events
- two events and two venues should be created when importing two identical events with two non-identical venues
- should replace a venue identical to a squashed duplicate with the master venue

Venue
- should be valid
- should add an http prefix to urls missing this before save

Venue with hCalendar to AbstractEvent parsing
- should extract an AbstractEvent from an hCalendar text

Venue when finding exact duplicates
- should ignore attributes like created_at
- should ignore source_id
- should not match non-duplicates

Venue with duplicate finder
- should find all venues with duplicate titles
- should find all venues with duplicate titles and urls
- should find all venues that have not been marked as duplicate
- should find all venues that have been marked as duplicate

Venue with duplicate finder (integration test)
- should find duplicate title by title
- should find duplicate title by any
- should not find duplicate title by address
- should find complete duplicates by all
- should not find incomplete duplicates by all
- should find duplicate for matching multiple fields
- should not find duplicates for mismatching multiple fields

Venue when duplicates squashing
- should squash a single duplicate
- should squash multiple duplicates
- should squash duplicates recursively
- should transfer events of duplicates
- should squash duplicates by ID

Venue geocoding
- should be valid even if not yet geocoded
- should report its location properly if it has one
- should geocode automatically on save
- shouldn't geocode automatically unless there's an address
- shouldn't geocode automatically if already geocoded
- shouldn't fail if the geocoder returns failure
- should fill in empty addressing fields
- should leave non-empty addressing fields alone
- should strip location when geocoding is forced

Venue geocode addressing
- should use the street address fields if they're present
- should fall back to 'address' field if street address fields are blank

/events/duplicates
- should render valid XHTML

/events/edit
- should render valid XHTML

/events
- should render valid XHTML

/events/new
- should render valid XHTML

/events/show
- should display a single event
- should render valid XHTML
- should display a map if the event's venue has a location
- should not display a map if the event's venue has no location

Google Calendar Integration for Venue with Multi-Line Address
- should should render Google Calendar reminder link
- should export address to Google Calendar

/layouts/application
- should render valid XHTML

/site/index
- should render valid XHTML

/sources/edit.html.erb
- should render edit form

/sources/index.html.erb
- should render list of sources

/sources/new.html.erb
- should render valid XHTML
- should render new form

/sources/show.html.erb
- should render attributes in <p>

/venues/duplicates
- should render valid XHTML

/venues/edit
- should render valid XHTML

/venues
- should render valid XHTML
- should display a map if any venues have locations
- should not display a map if no venues have locations

/venues/new
- should render valid XHTML

/venues/show
- should render valid XHTML
- should display a map for a venue with a location
- should not display a map if the venue has no location
